/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.today.api.purchase.request;

        import java.util.Optional;
        import com.github.dapeng.org.apache.thrift.TException;
        import com.github.dapeng.org.apache.thrift.protocol.TCompactProtocol;
        import com.github.dapeng.util.TCommonTransport;

        /**
         * Autogenerated by Dapeng-Code-Generator (2.1.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

        *
        **/
        public class ListSkuStockByStoreCodeRequest{
        
            /**
            *
            **/
            public String storeId ;
            public String getStoreId(){ return this.storeId; }
            public void setStoreId(String storeId){ this.storeId = storeId; }

            public String storeId(){ return this.storeId; }
            public ListSkuStockByStoreCodeRequest storeId(String storeId){ this.storeId = storeId; return this; }
          
            /**
            *
            **/
            public Optional<com.today.api.common.PageRequest> pageRequest = Optional.empty();
            public Optional<com.today.api.common.PageRequest> getPageRequest(){ return this.pageRequest; }
            public void setPageRequest(Optional<com.today.api.common.PageRequest> pageRequest){ this.pageRequest = pageRequest; }

            public Optional<com.today.api.common.PageRequest> pageRequest(){ return this.pageRequest; }
            public ListSkuStockByStoreCodeRequest pageRequest(Optional<com.today.api.common.PageRequest> pageRequest){ this.pageRequest = pageRequest; return this; }
          
            /**
            *
            **/
            public Optional<String> categoryCode = Optional.empty();
            public Optional<String> getCategoryCode(){ return this.categoryCode; }
            public void setCategoryCode(Optional<String> categoryCode){ this.categoryCode = categoryCode; }

            public Optional<String> categoryCode(){ return this.categoryCode; }
            public ListSkuStockByStoreCodeRequest categoryCode(Optional<String> categoryCode){ this.categoryCode = categoryCode; return this; }
          
            /**
            *
            **/
            public Optional<String> skuType = Optional.empty();
            public Optional<String> getSkuType(){ return this.skuType; }
            public void setSkuType(Optional<String> skuType){ this.skuType = skuType; }

            public Optional<String> skuType(){ return this.skuType; }
            public ListSkuStockByStoreCodeRequest skuType(Optional<String> skuType){ this.skuType = skuType; return this; }
          
            /**
            *
            **/
            public Optional<Double> minSellingPrice = Optional.empty();
            public Optional<Double> getMinSellingPrice(){ return this.minSellingPrice; }
            public void setMinSellingPrice(Optional<Double> minSellingPrice){ this.minSellingPrice = minSellingPrice; }

            public Optional<Double> minSellingPrice(){ return this.minSellingPrice; }
            public ListSkuStockByStoreCodeRequest minSellingPrice(Optional<Double> minSellingPrice){ this.minSellingPrice = minSellingPrice; return this; }
          
            /**
            *
            **/
            public Optional<Double> maxSellingPrice = Optional.empty();
            public Optional<Double> getMaxSellingPrice(){ return this.maxSellingPrice; }
            public void setMaxSellingPrice(Optional<Double> maxSellingPrice){ this.maxSellingPrice = maxSellingPrice; }

            public Optional<Double> maxSellingPrice(){ return this.maxSellingPrice; }
            public ListSkuStockByStoreCodeRequest maxSellingPrice(Optional<Double> maxSellingPrice){ this.maxSellingPrice = maxSellingPrice; return this; }
          
            /**
            *
            **/
            public Optional<String> skuName = Optional.empty();
            public Optional<String> getSkuName(){ return this.skuName; }
            public void setSkuName(Optional<String> skuName){ this.skuName = skuName; }

            public Optional<String> skuName(){ return this.skuName; }
            public ListSkuStockByStoreCodeRequest skuName(Optional<String> skuName){ this.skuName = skuName; return this; }
          
            /**
            *
            **/
            public Optional<String> skuNo = Optional.empty();
            public Optional<String> getSkuNo(){ return this.skuNo; }
            public void setSkuNo(Optional<String> skuNo){ this.skuNo = skuNo; }

            public Optional<String> skuNo(){ return this.skuNo; }
            public ListSkuStockByStoreCodeRequest skuNo(Optional<String> skuNo){ this.skuNo = skuNo; return this; }
          
            /**
            *
            **/
            public Optional<String> skuMasterBarcode = Optional.empty();
            public Optional<String> getSkuMasterBarcode(){ return this.skuMasterBarcode; }
            public void setSkuMasterBarcode(Optional<String> skuMasterBarcode){ this.skuMasterBarcode = skuMasterBarcode; }

            public Optional<String> skuMasterBarcode(){ return this.skuMasterBarcode; }
            public ListSkuStockByStoreCodeRequest skuMasterBarcode(Optional<String> skuMasterBarcode){ this.skuMasterBarcode = skuMasterBarcode; return this; }
          

        public static byte[] getBytesFromBean(ListSkuStockByStoreCodeRequest bean) throws TException {
          byte[] bytes = new byte[]{};
          TCommonTransport transport = new TCommonTransport(bytes, TCommonTransport.Type.Write);
          TCompactProtocol protocol = new TCompactProtocol(transport);

          new com.today.api.purchase.request.serializer.ListSkuStockByStoreCodeRequestSerializer().write(bean, protocol);
          transport.flush();
          return transport.getByteBuf();
        }

        public static ListSkuStockByStoreCodeRequest getBeanFromBytes(byte[] bytes) throws TException {
          TCommonTransport transport = new TCommonTransport(bytes, TCommonTransport.Type.Read);
          TCompactProtocol protocol = new TCompactProtocol(transport);
          return new com.today.api.purchase.request.serializer.ListSkuStockByStoreCodeRequestSerializer().read(protocol);
        }

        public String toString(){
          StringBuilder stringBuilder = new StringBuilder("{");
            stringBuilder.append("\"").append("storeId").append("\":\"").append(this.storeId).append("\",");
    stringBuilder.append("\"").append("pageRequest").append("\":").append(this.pageRequest.isPresent()?this.pageRequest.get().toString():null).append(",");
    stringBuilder.append("\"").append("categoryCode").append("\":\"").append(this.categoryCode.isPresent()?this.categoryCode.get():null).append("\",");
    stringBuilder.append("\"").append("skuType").append("\":\"").append(this.skuType.isPresent()?this.skuType.get():null).append("\",");
    stringBuilder.append("\"").append("minSellingPrice").append("\":").append(this.minSellingPrice.isPresent()?this.minSellingPrice.get():null).append(",");
    stringBuilder.append("\"").append("maxSellingPrice").append("\":").append(this.maxSellingPrice.isPresent()?this.maxSellingPrice.get():null).append(",");
    stringBuilder.append("\"").append("skuName").append("\":\"").append(this.skuName.isPresent()?this.skuName.get():null).append("\",");
    stringBuilder.append("\"").append("skuNo").append("\":\"").append(this.skuNo.isPresent()?this.skuNo.get():null).append("\",");
    stringBuilder.append("\"").append("skuMasterBarcode").append("\":\"").append(this.skuMasterBarcode.isPresent()?this.skuMasterBarcode.get():null).append("\",");
    
            stringBuilder.deleteCharAt(stringBuilder.lastIndexOf(","));
            stringBuilder.append("}");

          return stringBuilder.toString();
        }
      }
      