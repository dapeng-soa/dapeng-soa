/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.today.api.purchase.request;

        import java.util.Optional;
        import com.github.dapeng.org.apache.thrift.TException;
        import com.github.dapeng.org.apache.thrift.protocol.TCompactProtocol;
        import com.github.dapeng.util.TCommonTransport;

        /**
         * Autogenerated by Dapeng-Code-Generator (2.1.1-final)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

        *
        **/
        public class UpdateStockRequest{
        
            /**
            *
            **/
            public long id ;
            public long getId(){ return this.id; }
            public void setId(long id){ this.id = id; }

            public long id(){ return this.id; }
            public UpdateStockRequest id(long id){ this.id = id; return this; }
          
            /**
            *
            **/
            public Optional<Long> stockId = Optional.empty();
            public Optional<Long> getStockId(){ return this.stockId; }
            public void setStockId(Optional<Long> stockId){ this.stockId = stockId; }

            public Optional<Long> stockId(){ return this.stockId; }
            public UpdateStockRequest stockId(Optional<Long> stockId){ this.stockId = stockId; return this; }
          
            /**
            *
            **/
            public Optional<Integer> sourceType = Optional.empty();
            public Optional<Integer> getSourceType(){ return this.sourceType; }
            public void setSourceType(Optional<Integer> sourceType){ this.sourceType = sourceType; }

            public Optional<Integer> sourceType(){ return this.sourceType; }
            public UpdateStockRequest sourceType(Optional<Integer> sourceType){ this.sourceType = sourceType; return this; }
          
            /**
            *
            **/
            public Optional<Long> sourceId = Optional.empty();
            public Optional<Long> getSourceId(){ return this.sourceId; }
            public void setSourceId(Optional<Long> sourceId){ this.sourceId = sourceId; }

            public Optional<Long> sourceId(){ return this.sourceId; }
            public UpdateStockRequest sourceId(Optional<Long> sourceId){ this.sourceId = sourceId; return this; }
          
            /**
            *
            **/
            public Optional<Long> sourceTime = Optional.empty();
            public Optional<Long> getSourceTime(){ return this.sourceTime; }
            public void setSourceTime(Optional<Long> sourceTime){ this.sourceTime = sourceTime; }

            public Optional<Long> sourceTime(){ return this.sourceTime; }
            public UpdateStockRequest sourceTime(Optional<Long> sourceTime){ this.sourceTime = sourceTime; return this; }
          
            /**
            *

 库存数
 @datatype(name="bigdecimal")

            **/
            public Optional<java.math.BigDecimal> stockAmount = Optional.empty();
            public Optional<java.math.BigDecimal> getStockAmount(){ return this.stockAmount; }
            public void setStockAmount(Optional<java.math.BigDecimal> stockAmount){ this.stockAmount = stockAmount; }

            public Optional<java.math.BigDecimal> stockAmount(){ return this.stockAmount; }
            public UpdateStockRequest stockAmount(Optional<java.math.BigDecimal> stockAmount){ this.stockAmount = stockAmount; return this; }
          
            /**
            *

 ff库存数
 @datatype(name="bigdecimal")

            **/
            public Optional<java.math.BigDecimal> ffStockAmount = Optional.empty();
            public Optional<java.math.BigDecimal> getFfStockAmount(){ return this.ffStockAmount; }
            public void setFfStockAmount(Optional<java.math.BigDecimal> ffStockAmount){ this.ffStockAmount = ffStockAmount; }

            public Optional<java.math.BigDecimal> ffStockAmount(){ return this.ffStockAmount; }
            public UpdateStockRequest ffStockAmount(Optional<java.math.BigDecimal> ffStockAmount){ this.ffStockAmount = ffStockAmount; return this; }
          
            /**
            *

 库存数
 @datatype(name="bigdecimal")

            **/
            public Optional<java.math.BigDecimal> afterStockNum = Optional.empty();
            public Optional<java.math.BigDecimal> getAfterStockNum(){ return this.afterStockNum; }
            public void setAfterStockNum(Optional<java.math.BigDecimal> afterStockNum){ this.afterStockNum = afterStockNum; }

            public Optional<java.math.BigDecimal> afterStockNum(){ return this.afterStockNum; }
            public UpdateStockRequest afterStockNum(Optional<java.math.BigDecimal> afterStockNum){ this.afterStockNum = afterStockNum; return this; }
          
            /**
            *
            **/
            public Optional<Integer> afterFfStockWeight = Optional.empty();
            public Optional<Integer> getAfterFfStockWeight(){ return this.afterFfStockWeight; }
            public void setAfterFfStockWeight(Optional<Integer> afterFfStockWeight){ this.afterFfStockWeight = afterFfStockWeight; }

            public Optional<Integer> afterFfStockWeight(){ return this.afterFfStockWeight; }
            public UpdateStockRequest afterFfStockWeight(Optional<Integer> afterFfStockWeight){ this.afterFfStockWeight = afterFfStockWeight; return this; }
          
            /**
            *
            **/
            public Optional<Integer> handleType = Optional.empty();
            public Optional<Integer> getHandleType(){ return this.handleType; }
            public void setHandleType(Optional<Integer> handleType){ this.handleType = handleType; }

            public Optional<Integer> handleType(){ return this.handleType; }
            public UpdateStockRequest handleType(Optional<Integer> handleType){ this.handleType = handleType; return this; }
          
            /**
            *
            **/
            public Optional<Integer> isDeleted = Optional.empty();
            public Optional<Integer> getIsDeleted(){ return this.isDeleted; }
            public void setIsDeleted(Optional<Integer> isDeleted){ this.isDeleted = isDeleted; }

            public Optional<Integer> isDeleted(){ return this.isDeleted; }
            public UpdateStockRequest isDeleted(Optional<Integer> isDeleted){ this.isDeleted = isDeleted; return this; }
          
            /**
            *
            **/
            public Optional<Double> sellingPrice = Optional.empty();
            public Optional<Double> getSellingPrice(){ return this.sellingPrice; }
            public void setSellingPrice(Optional<Double> sellingPrice){ this.sellingPrice = sellingPrice; }

            public Optional<Double> sellingPrice(){ return this.sellingPrice; }
            public UpdateStockRequest sellingPrice(Optional<Double> sellingPrice){ this.sellingPrice = sellingPrice; return this; }
          
            /**
            *
            **/
            public Optional<Double> buyingPrice = Optional.empty();
            public Optional<Double> getBuyingPrice(){ return this.buyingPrice; }
            public void setBuyingPrice(Optional<Double> buyingPrice){ this.buyingPrice = buyingPrice; }

            public Optional<Double> buyingPrice(){ return this.buyingPrice; }
            public UpdateStockRequest buyingPrice(Optional<Double> buyingPrice){ this.buyingPrice = buyingPrice; return this; }
          
            /**
            *
            **/
            public Optional<Long> createdAt = Optional.empty();
            public Optional<Long> getCreatedAt(){ return this.createdAt; }
            public void setCreatedAt(Optional<Long> createdAt){ this.createdAt = createdAt; }

            public Optional<Long> createdAt(){ return this.createdAt; }
            public UpdateStockRequest createdAt(Optional<Long> createdAt){ this.createdAt = createdAt; return this; }
          
            /**
            *
            **/
            public Optional<Long> createdBy = Optional.empty();
            public Optional<Long> getCreatedBy(){ return this.createdBy; }
            public void setCreatedBy(Optional<Long> createdBy){ this.createdBy = createdBy; }

            public Optional<Long> createdBy(){ return this.createdBy; }
            public UpdateStockRequest createdBy(Optional<Long> createdBy){ this.createdBy = createdBy; return this; }
          
            /**
            *
            **/
            public Optional<Long> updatedAt = Optional.empty();
            public Optional<Long> getUpdatedAt(){ return this.updatedAt; }
            public void setUpdatedAt(Optional<Long> updatedAt){ this.updatedAt = updatedAt; }

            public Optional<Long> updatedAt(){ return this.updatedAt; }
            public UpdateStockRequest updatedAt(Optional<Long> updatedAt){ this.updatedAt = updatedAt; return this; }
          
            /**
            *
            **/
            public Optional<Long> updatedBy = Optional.empty();
            public Optional<Long> getUpdatedBy(){ return this.updatedBy; }
            public void setUpdatedBy(Optional<Long> updatedBy){ this.updatedBy = updatedBy; }

            public Optional<Long> updatedBy(){ return this.updatedBy; }
            public UpdateStockRequest updatedBy(Optional<Long> updatedBy){ this.updatedBy = updatedBy; return this; }
          
            /**
            *
            **/
            public Optional<String> remark = Optional.empty();
            public Optional<String> getRemark(){ return this.remark; }
            public void setRemark(Optional<String> remark){ this.remark = remark; }

            public Optional<String> remark(){ return this.remark; }
            public UpdateStockRequest remark(Optional<String> remark){ this.remark = remark; return this; }
          
            /**
            *
            **/
            public Optional<String> kafkaId = Optional.empty();
            public Optional<String> getKafkaId(){ return this.kafkaId; }
            public void setKafkaId(Optional<String> kafkaId){ this.kafkaId = kafkaId; }

            public Optional<String> kafkaId(){ return this.kafkaId; }
            public UpdateStockRequest kafkaId(Optional<String> kafkaId){ this.kafkaId = kafkaId; return this; }
          
            /**
            *
            **/
            public Optional<Double> logisticsPriceAmount = Optional.empty();
            public Optional<Double> getLogisticsPriceAmount(){ return this.logisticsPriceAmount; }
            public void setLogisticsPriceAmount(Optional<Double> logisticsPriceAmount){ this.logisticsPriceAmount = logisticsPriceAmount; }

            public Optional<Double> logisticsPriceAmount(){ return this.logisticsPriceAmount; }
            public UpdateStockRequest logisticsPriceAmount(Optional<Double> logisticsPriceAmount){ this.logisticsPriceAmount = logisticsPriceAmount; return this; }
          
            /**
            *
            **/
            public Optional<Double> storeSellingPriceAmount = Optional.empty();
            public Optional<Double> getStoreSellingPriceAmount(){ return this.storeSellingPriceAmount; }
            public void setStoreSellingPriceAmount(Optional<Double> storeSellingPriceAmount){ this.storeSellingPriceAmount = storeSellingPriceAmount; }

            public Optional<Double> storeSellingPriceAmount(){ return this.storeSellingPriceAmount; }
            public UpdateStockRequest storeSellingPriceAmount(Optional<Double> storeSellingPriceAmount){ this.storeSellingPriceAmount = storeSellingPriceAmount; return this; }
          
            /**
            *
            **/
            public Optional<Double> logisticsOutputTax = Optional.empty();
            public Optional<Double> getLogisticsOutputTax(){ return this.logisticsOutputTax; }
            public void setLogisticsOutputTax(Optional<Double> logisticsOutputTax){ this.logisticsOutputTax = logisticsOutputTax; }

            public Optional<Double> logisticsOutputTax(){ return this.logisticsOutputTax; }
            public UpdateStockRequest logisticsOutputTax(Optional<Double> logisticsOutputTax){ this.logisticsOutputTax = logisticsOutputTax; return this; }
          
            /**
            *
            **/
            public Optional<Double> logisticsPrice = Optional.empty();
            public Optional<Double> getLogisticsPrice(){ return this.logisticsPrice; }
            public void setLogisticsPrice(Optional<Double> logisticsPrice){ this.logisticsPrice = logisticsPrice; }

            public Optional<Double> logisticsPrice(){ return this.logisticsPrice; }
            public UpdateStockRequest logisticsPrice(Optional<Double> logisticsPrice){ this.logisticsPrice = logisticsPrice; return this; }
          
            /**
            *
            **/
            public Optional<Double> storeSellingPrice = Optional.empty();
            public Optional<Double> getStoreSellingPrice(){ return this.storeSellingPrice; }
            public void setStoreSellingPrice(Optional<Double> storeSellingPrice){ this.storeSellingPrice = storeSellingPrice; }

            public Optional<Double> storeSellingPrice(){ return this.storeSellingPrice; }
            public UpdateStockRequest storeSellingPrice(Optional<Double> storeSellingPrice){ this.storeSellingPrice = storeSellingPrice; return this; }
          

        public static byte[] getBytesFromBean(UpdateStockRequest bean) throws TException {
          byte[] bytes = new byte[]{};
          TCommonTransport transport = new TCommonTransport(bytes, TCommonTransport.Type.Write);
          TCompactProtocol protocol = new TCompactProtocol(transport);

          new com.today.api.purchase.request.serializer.UpdateStockRequestSerializer().write(bean, protocol);
          transport.flush();
          return transport.getByteBuf();
        }

        public static UpdateStockRequest getBeanFromBytes(byte[] bytes) throws TException {
          TCommonTransport transport = new TCommonTransport(bytes, TCommonTransport.Type.Read);
          TCompactProtocol protocol = new TCompactProtocol(transport);
          return new com.today.api.purchase.request.serializer.UpdateStockRequestSerializer().read(protocol);
        }

        public String toString(){
          StringBuilder stringBuilder = new StringBuilder("{");
            stringBuilder.append("\"").append("id").append("\":").append(this.id).append(",");
    stringBuilder.append("\"").append("stockId").append("\":").append(this.stockId.isPresent()?this.stockId.get():null).append(",");
    stringBuilder.append("\"").append("sourceType").append("\":").append(this.sourceType.isPresent()?this.sourceType.get():null).append(",");
    stringBuilder.append("\"").append("sourceId").append("\":").append(this.sourceId.isPresent()?this.sourceId.get():null).append(",");
    stringBuilder.append("\"").append("sourceTime").append("\":").append(this.sourceTime.isPresent()?this.sourceTime.get():null).append(",");
    stringBuilder.append("\"").append("stockAmount").append("\":").append(this.stockAmount.isPresent()?this.stockAmount.get():null).append(",");
    stringBuilder.append("\"").append("ffStockAmount").append("\":").append(this.ffStockAmount.isPresent()?this.ffStockAmount.get():null).append(",");
    stringBuilder.append("\"").append("afterStockNum").append("\":").append(this.afterStockNum.isPresent()?this.afterStockNum.get():null).append(",");
    stringBuilder.append("\"").append("afterFfStockWeight").append("\":").append(this.afterFfStockWeight.isPresent()?this.afterFfStockWeight.get():null).append(",");
    stringBuilder.append("\"").append("handleType").append("\":").append(this.handleType.isPresent()?this.handleType.get():null).append(",");
    stringBuilder.append("\"").append("isDeleted").append("\":").append(this.isDeleted.isPresent()?this.isDeleted.get():null).append(",");
    stringBuilder.append("\"").append("sellingPrice").append("\":").append(this.sellingPrice.isPresent()?this.sellingPrice.get():null).append(",");
    stringBuilder.append("\"").append("buyingPrice").append("\":").append(this.buyingPrice.isPresent()?this.buyingPrice.get():null).append(",");
    stringBuilder.append("\"").append("createdAt").append("\":").append(this.createdAt.isPresent()?this.createdAt.get():null).append(",");
    stringBuilder.append("\"").append("createdBy").append("\":").append(this.createdBy.isPresent()?this.createdBy.get():null).append(",");
    stringBuilder.append("\"").append("updatedAt").append("\":").append(this.updatedAt.isPresent()?this.updatedAt.get():null).append(",");
    stringBuilder.append("\"").append("updatedBy").append("\":").append(this.updatedBy.isPresent()?this.updatedBy.get():null).append(",");
    stringBuilder.append("\"").append("remark").append("\":\"").append(this.remark.isPresent()?this.remark.get():null).append("\",");
    stringBuilder.append("\"").append("kafkaId").append("\":\"").append(this.kafkaId.isPresent()?this.kafkaId.get():null).append("\",");
    stringBuilder.append("\"").append("logisticsPriceAmount").append("\":").append(this.logisticsPriceAmount.isPresent()?this.logisticsPriceAmount.get():null).append(",");
    stringBuilder.append("\"").append("storeSellingPriceAmount").append("\":").append(this.storeSellingPriceAmount.isPresent()?this.storeSellingPriceAmount.get():null).append(",");
    stringBuilder.append("\"").append("logisticsOutputTax").append("\":").append(this.logisticsOutputTax.isPresent()?this.logisticsOutputTax.get():null).append(",");
    stringBuilder.append("\"").append("logisticsPrice").append("\":").append(this.logisticsPrice.isPresent()?this.logisticsPrice.get():null).append(",");
    stringBuilder.append("\"").append("storeSellingPrice").append("\":").append(this.storeSellingPrice.isPresent()?this.storeSellingPrice.get():null).append(",");
    
            stringBuilder.deleteCharAt(stringBuilder.lastIndexOf(","));
            stringBuilder.append("}");

          return stringBuilder.toString();
        }
      }
      