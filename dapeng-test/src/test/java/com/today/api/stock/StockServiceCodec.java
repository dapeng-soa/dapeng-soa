/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.today.api.stock;
        import com.today.api.purchase.request.serializer.*;import com.today.api.common.serializer.*;import com.today.api.purchase.response.serializer.*;import com.today.api.stock.response.serializer.*;import com.today.api.stock.request.serializer.*;import com.today.api.stock.events.serializer.*;import com.today.api.stock.vo.serializer.*;

        import com.github.dapeng.core.*;
        import com.github.dapeng.org.apache.thrift.*;
        import com.github.dapeng.org.apache.thrift.protocol.*;

        import com.github.dapeng.core.definition.SoaServiceDefinition;
        import com.github.dapeng.core.definition.SoaFunctionDefinition;

        import java.io.BufferedReader;
        import java.io.InputStreamReader;

        import java.util.Optional;
        import java.util.concurrent.CompletableFuture;
        import java.util.concurrent.Future;
        import com.today.api.stock.StockServiceSuperCodec.*;

        /**
        * Autogenerated by Dapeng-Code-Generator (2.1.1-final)
        *
        * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
        *
        **/
        public class StockServiceCodec {

        
            public static class addStockAction<I extends com.today.api.stock.service.StockService> extends SoaFunctionDefinition.Sync<I, addStockAction_args, addStockAction_result>
            {
              public addStockAction()
              {
                super("addStockAction", new AddStockAction_argsSerializer(),  new AddStockAction_resultSerializer());
              }

              @Override
              public addStockAction_result apply(I iface, addStockAction_args addStockAction_args) throws SoaException
              {
                addStockAction_result result = new addStockAction_result();
                
                 iface.addStockAction(addStockAction_args.getRequest());
                
                return result;
              }

            }
          
            public static class updateInventoryAction<I extends com.today.api.stock.service.StockService> extends SoaFunctionDefinition.Sync<I, updateInventoryAction_args, updateInventoryAction_result>
            {
              public updateInventoryAction()
              {
                super("updateInventoryAction", new UpdateInventoryAction_argsSerializer(),  new UpdateInventoryAction_resultSerializer());
              }

              @Override
              public updateInventoryAction_result apply(I iface, updateInventoryAction_args updateInventoryAction_args) throws SoaException
              {
                updateInventoryAction_result result = new updateInventoryAction_result();
                
                 iface.updateInventoryAction(updateInventoryAction_args.getRequest());
                
                return result;
              }

            }
          
            public static class deleteStock<I extends com.today.api.stock.service.StockService> extends SoaFunctionDefinition.Sync<I, deleteStock_args, deleteStock_result>
            {
              public deleteStock()
              {
                super("deleteStock", new DeleteStock_argsSerializer(),  new DeleteStock_resultSerializer());
              }

              @Override
              public deleteStock_result apply(I iface, deleteStock_args deleteStock_args) throws SoaException
              {
                deleteStock_result result = new deleteStock_result();
                
                 iface.deleteStock(deleteStock_args.getIds());
                
                return result;
              }

            }
          
            public static class getStockByOwnerId<I extends com.today.api.stock.service.StockService> extends SoaFunctionDefinition.Sync<I, getStockByOwnerId_args, getStockByOwnerId_result>
            {
              public getStockByOwnerId()
              {
                super("getStockByOwnerId", new GetStockByOwnerId_argsSerializer(),  new GetStockByOwnerId_resultSerializer());
              }

              @Override
              public getStockByOwnerId_result apply(I iface, getStockByOwnerId_args getStockByOwnerId_args) throws SoaException
              {
                getStockByOwnerId_result result = new getStockByOwnerId_result();
                
                result.setSuccess(iface.getStockByOwnerId(getStockByOwnerId_args.getStockQueryRequest()));
                
                return result;
              }

            }
          
            public static class listSkuStockByStoreCode<I extends com.today.api.stock.service.StockService> extends SoaFunctionDefinition.Sync<I, listSkuStockByStoreCode_args, listSkuStockByStoreCode_result>
            {
              public listSkuStockByStoreCode()
              {
                super("listSkuStockByStoreCode", new ListSkuStockByStoreCode_argsSerializer(),  new ListSkuStockByStoreCode_resultSerializer());
              }

              @Override
              public listSkuStockByStoreCode_result apply(I iface, listSkuStockByStoreCode_args listSkuStockByStoreCode_args) throws SoaException
              {
                listSkuStockByStoreCode_result result = new listSkuStockByStoreCode_result();
                
                result.setSuccess(iface.listSkuStockByStoreCode(listSkuStockByStoreCode_args.getRequest()));
                
                return result;
              }

            }
          
            public static class listStockByStoreId<I extends com.today.api.stock.service.StockService> extends SoaFunctionDefinition.Sync<I, listStockByStoreId_args, listStockByStoreId_result>
            {
              public listStockByStoreId()
              {
                super("listStockByStoreId", new ListStockByStoreId_argsSerializer(),  new ListStockByStoreId_resultSerializer());
              }

              @Override
              public listStockByStoreId_result apply(I iface, listStockByStoreId_args listStockByStoreId_args) throws SoaException
              {
                listStockByStoreId_result result = new listStockByStoreId_result();
                
                result.setSuccess(iface.listStockByStoreId(listStockByStoreId_args.getRequest()));
                
                return result;
              }

            }
          
            public static class listInventoryTransOutInfo<I extends com.today.api.stock.service.StockService> extends SoaFunctionDefinition.Sync<I, listInventoryTransOutInfo_args, listInventoryTransOutInfo_result>
            {
              public listInventoryTransOutInfo()
              {
                super("listInventoryTransOutInfo", new ListInventoryTransOutInfo_argsSerializer(),  new ListInventoryTransOutInfo_resultSerializer());
              }

              @Override
              public listInventoryTransOutInfo_result apply(I iface, listInventoryTransOutInfo_args listInventoryTransOutInfo_args) throws SoaException
              {
                listInventoryTransOutInfo_result result = new listInventoryTransOutInfo_result();
                
                result.setSuccess(iface.listInventoryTransOutInfo(listInventoryTransOutInfo_args.getRequest()));
                
                return result;
              }

            }
          
            public static class updateStockByStoreAndSkuNos<I extends com.today.api.stock.service.StockService> extends SoaFunctionDefinition.Sync<I, updateStockByStoreAndSkuNos_args, updateStockByStoreAndSkuNos_result>
            {
              public updateStockByStoreAndSkuNos()
              {
                super("updateStockByStoreAndSkuNos", new UpdateStockByStoreAndSkuNos_argsSerializer(),  new UpdateStockByStoreAndSkuNos_resultSerializer());
              }

              @Override
              public updateStockByStoreAndSkuNos_result apply(I iface, updateStockByStoreAndSkuNos_args updateStockByStoreAndSkuNos_args) throws SoaException
              {
                updateStockByStoreAndSkuNos_result result = new updateStockByStoreAndSkuNos_result();
                
                 iface.updateStockByStoreAndSkuNos(updateStockByStoreAndSkuNos_args.getStoreId(),updateStockByStoreAndSkuNos_args.getSkuNoList());
                
                return result;
              }

            }
          
            public static class calculateElemStock<I extends com.today.api.stock.service.StockService> extends SoaFunctionDefinition.Sync<I, calculateElemStock_args, calculateElemStock_result>
            {
              public calculateElemStock()
              {
                super("calculateElemStock", new CalculateElemStock_argsSerializer(),  new CalculateElemStock_resultSerializer());
              }

              @Override
              public calculateElemStock_result apply(I iface, calculateElemStock_args calculateElemStock_args) throws SoaException
              {
                calculateElemStock_result result = new calculateElemStock_result();
                
                 iface.calculateElemStock();
                
                return result;
              }

            }
          

        public static class getServiceMetadata<I extends com.today.api.stock.service.StockService> extends SoaFunctionDefinition.Sync<I, getServiceMetadata_args, getServiceMetadata_result> {
          public getServiceMetadata() {
            super("getServiceMetadata", new GetServiceMetadata_argsSerializer(), new GetServiceMetadata_resultSerializer());
          }

          @Override
          public getServiceMetadata_result apply(I iface, getServiceMetadata_args args) {
            getServiceMetadata_result result = new getServiceMetadata_result();

            try (InputStreamReader isr = new InputStreamReader(StockServiceCodec.class.getClassLoader().getResourceAsStream("com.today.api.stock.service.StockService.xml"));
            BufferedReader in = new BufferedReader(isr)) {
              int len = 0;
              StringBuilder str = new StringBuilder("");
              String line;
              while ((line = in.readLine()) != null) {

                if (len != 0) {
                  str.append("\r\n").append(line);
                } else {
                  str.append(line);
                }
                len++;
              }
              result.setSuccess(str.toString());

            } catch (Exception e) {
              e.printStackTrace();
              result.setSuccess("");
            }

            return result;
          }

        }


        public static class echo<I extends com.today.api.stock.service.StockService> extends SoaFunctionDefinition.Sync<I, echo_args, echo_result> {
          public echo() {
            super("echo", new echo_argsSerializer(), new echo_resultSerializer());
          }

          @Override
          public echo_result apply(I iface, echo_args args) {
            echo_result result = new echo_result();

            String echoMsg = (String) TransactionContext.Factory.currentInstance().getAttribute("container-threadPool-info");
            //result.setSuccess("PONG");
            result.setSuccess(echoMsg);
            return result;

          }

        }


        @SuppressWarnings("unchecked")
        public static class Processor<I extends com.today.api.stock.service.StockService> extends SoaServiceDefinition<com.today.api.stock.service.StockService>
        {

          public Processor(com.today.api.stock.service.StockService iface, Class<com.today.api.stock.service.StockService> ifaceClass)
          {
            super(iface, ifaceClass, buildMap(new java.util.HashMap<>()));
          }

          @SuppressWarnings("unchecked")
          private static <I extends com.today.api.stock.service.StockService> java.util.Map<String, SoaFunctionDefinition<I, ?, ?>> buildMap(java.util.Map<String, SoaFunctionDefinition<I, ?, ?>> processMap)
          {
            
                processMap.put("addStockAction", new addStockAction());
              
                processMap.put("updateInventoryAction", new updateInventoryAction());
              
                processMap.put("deleteStock", new deleteStock());
              
                processMap.put("getStockByOwnerId", new getStockByOwnerId());
              
                processMap.put("listSkuStockByStoreCode", new listSkuStockByStoreCode());
              
                processMap.put("listStockByStoreId", new listStockByStoreId());
              
                processMap.put("listInventoryTransOutInfo", new listInventoryTransOutInfo());
              
                processMap.put("updateStockByStoreAndSkuNos", new updateStockByStoreAndSkuNos());
              
                processMap.put("calculateElemStock", new calculateElemStock());
              
            processMap.put("getServiceMetadata", new getServiceMetadata());
            processMap.put("echo", new echo());
            return processMap;
          }
        }

      }
      